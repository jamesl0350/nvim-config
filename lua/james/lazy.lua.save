local lazypath = vim.fn.stdpath("data") .. "/lazy/lazy.nvim" if not vim.loop.fs_stat(lazypath) then
  vim.fn.system({
    "git", "clone", "--filter=blob:none", "https://github.com/folke/lazy.nvim.git", "--branch=stable", -- latest stable release 
    lazypath,
  })
end vim.opt.rtp:prepend(lazypath)

require("lazy") .setup({ { import = "james.plugins" }, { import = "james.plugins.lsp" } }, {
    checker = {
      enabled = true, notify = false,
    },
    change_detection = { notify = false,
    },
  })
    --Got from neovim lazy lua ide setup guide for python {
    {
      "VonHeikemen/lsp-zero.nvim", branch = "v3.x", lazy = true, config = false, init = function()
        -- Disable automatic setup, we are doing it manually vim.g.lsp_zero_extend_cmp = 0 vim.g.lsp_zero_extend_lspconfig = 0
      end,
    },
    { "williamboman/mason.nvim", lazy = false, config = true,
    },

    -- Autocompletion {
      "hrsh7th/nvim-cmp", event = "InsertEnter", dependencies = {
        { "L3MON4D3/LuaSnip" },
      },
      config = function() -- Here is where you configure the autocompletion settings. local lsp_zero = require("lsp-zero") 
 
    -- LSP {
      "neovim/nvim-lspconfig", cmd = { "LspInfo", "LspInstall", "LspStart" }, event = { "BufReadPre", "BufNewFile" }, 
      dependencies = {
        { "hrsh7th/cmp-nvim-lsp" }, { "williamboman/mason-lspconfig.nvim" },
      },
      config = function() -- This is where all the LSP shenanigans will live local lsp_zero = require("lsp-zero") 
        lsp_zero.extend_lspconfig()

        -- if you want to know more about mason.nvim -- read this: 
        https://github.com/VonHeikemen/lsp-zero.nvim/blob/v3.x/doc/md/guides/integrate-with-mason-nvim.md 
        lsp_zero.on_attach(function(client, bufnr)
          -- see :help lsp-zero-keybindings -- to learn the available actions lsp_zero.default_keymaps({ buffer = bufnr })
        end)

        require("mason-lspconfig").setup({ ensure_installed = {}, handlers = {
            -- this first function is the "default handler" -- it applies to every language server without a "custom handler" 
            function(server_name)
              require("lspconfig")[server_name].setup({}) end,

            -- this is the "custom handler" for `lua_ls` lua_ls = function()
              -- (Optional) Configure lua language server for neovim local lua_opts = lsp_zero.nvim_lua_ls() 
              require("lspconfig").lua_ls.setup(lua_opts)
            end,
          },
        })
      end,
    },
  }

